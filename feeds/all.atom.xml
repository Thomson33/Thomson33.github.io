<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Thoomson's blog</title><link href="https://thoomson.github.io/" rel="alternate"></link><link href="https://thoomson.github.io/feeds/all.atom.xml" rel="self"></link><id>https://thoomson.github.io/</id><updated>2019-10-16T10:30:00+02:00</updated><subtitle>DevOps</subtitle><entry><title>My Vagrant Env</title><link href="https://thoomson.github.io/my-vagrant-env.html" rel="alternate"></link><published>2019-10-16T10:30:00+02:00</published><updated>2019-10-16T10:30:00+02:00</updated><author><name>thoomson</name></author><id>tag:thoomson.github.io,2019-10-16:/my-vagrant-env.html</id><summary type="html">&lt;p&gt;My vagrant starter from Github&lt;/p&gt;</summary><content type="html">&lt;p&gt;Files and last updates : https://github.com/thoomson/MyVagrantEnv&lt;/p&gt;
&lt;p&gt;This is just a vagrantfile to deploy an environment based on Debian 10 (Buster).&lt;/p&gt;
&lt;p&gt;This vagrantfile also install docker and ansible with their latest version.&lt;/p&gt;
&lt;h2&gt;How to use it&lt;/h2&gt;
&lt;p&gt;You can use this vagrantfile with my Dockerfile that create a container with nginx. (You can find it here : https://github.com/thoomson/MyDockerStarter)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install Vagrant :-) [https://www.vagrantup.com/downloads.html]&lt;/li&gt;
&lt;li&gt;Clone this repo : &lt;code&gt;git clone https://github.com/thoomson/MyVagrantEnv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;With you favorite CMD, go to this repo (in my case : &lt;code&gt;cd /Users/Antoine/Desktop/MyVagrantEnv&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;(Optional) Clone the Dockerfile in this repo (in my case : &lt;code&gt;cd /Users/Antoine/Desktop/MyVagrantEnv &amp;amp;&amp;amp; curl https://raw.githubusercontent.com/thoomson/MyDockerStarter/master/Dockerfile &amp;gt; Dockerfile&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Start the VM : &lt;code&gt;vagrant up&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Have fun !&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Optional) Start the docker's nginx container : &lt;/p&gt;
&lt;p&gt;6.1. SSH the VM : &lt;code&gt;vagrant ssh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;6.2. Go to the synced folder : &lt;code&gt;cd /vagrant&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;6.3. Build the container : &lt;code&gt;sudo docker build -t my-container .&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;6.4. Start the container : &lt;code&gt;sudo docker run -d -p 8080:80 -p 2222:22 my-container&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;6.5. (BONUS) You can now ssh to your docker container : &lt;code&gt;ssh root@localhost -p 2222 -i /vagrant/my_key&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Some tips&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;How to SSH to my Vagrant Box&lt;/strong&gt; ?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Just use : &lt;code&gt;vagrant ssh&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;How to delete my Vagrant Box&lt;/strong&gt; ?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Just use : &lt;code&gt;vagrant destroy&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Contributing&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Fork it&lt;/li&gt;
&lt;li&gt;Create your feature branch (&lt;code&gt;git checkout -b my-new-feature&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Commit your changes (&lt;code&gt;git commit -am 'Add some feature'&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Push to the branch (&lt;code&gt;git push origin my-new-feature&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Create new Pull Request&lt;/li&gt;
&lt;/ol&gt;</content><category term="DevOps"></category><category term="vagrant"></category><category term="docker"></category><category term="debian"></category></entry><entry><title>My Docker Starter</title><link href="https://thoomson.github.io/my-docker-starter.html" rel="alternate"></link><published>2019-10-16T10:00:00+02:00</published><updated>2019-10-16T10:00:00+02:00</updated><author><name>thoomson</name></author><id>tag:thoomson.github.io,2019-10-16:/my-docker-starter.html</id><summary type="html">&lt;p&gt;My docker starter from Github&lt;/p&gt;</summary><content type="html">&lt;p&gt;Files and last updates : https://github.com/thoomson/MyDockerStarter&lt;/p&gt;
&lt;p&gt;Just a Dockerfile to deploy an nginx container.&lt;/p&gt;
&lt;p&gt;This Dockerfile can be used in combination with my Vagrantfile : https://github.com/thoomson/MyVagrantEnv&lt;/p&gt;
&lt;h2&gt;How to use it&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Install Docker (or use my Vagrantfile) : https://docs.docker.com/install/&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get the Dockerfile (with curl : &lt;code&gt;curl https://raw.githubusercontent.com/thoomson/MyDockerStarter/master/Dockerfile &amp;gt; Dockerfile&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Build the container : sudo docker build -t my-container .&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start the container : sudo docker run -d -p 8080:80 -p 2222:22 my-container&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Have fun !&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Contributing&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Fork it&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create your feature branch (&lt;code&gt;git checkout -b my-new-feature&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Commit your changes (&lt;code&gt;git commit -am 'Add some feature'&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Push to the branch (&lt;code&gt;git push origin my-new-feature&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create new Pull Request&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="DevOps"></category><category term="docker"></category><category term="dockerfile"></category><category term="nginx"></category><category term="ssh"></category><category term="openssh"></category></entry><entry><title>Automate WordPress install in AWS</title><link href="https://thoomson.github.io/automate-wordpress-install-in-aws.html" rel="alternate"></link><published>2019-09-10T15:00:00+02:00</published><updated>2019-09-10T15:00:00+02:00</updated><author><name>thoomson</name></author><id>tag:thoomson.github.io,2019-09-10:/automate-wordpress-install-in-aws.html</id><summary type="html">&lt;p&gt;My Python script to automatically install Wordpress in an AWS EC2 instance from Github&lt;/p&gt;</summary><content type="html">&lt;p&gt;Files and last updates : https://github.com/thoomson/AutoInstallWPinAWS&lt;/p&gt;
&lt;p&gt;Python script to automatically install Wordpress in an AWS EC2 instance
This script has only be tested on &lt;strong&gt;Debian 9&lt;/strong&gt; and &lt;strong&gt;Windows 10&lt;/strong&gt; ! Be carrefull when use it on others systems.&lt;/p&gt;
&lt;h2&gt;Prepare your setup&lt;/h2&gt;
&lt;p&gt;To use this script you need to install Python3 and pip3.
* On debian/ubuntu : &lt;code&gt;apt-get install python3 pip3&lt;/code&gt;
* On centos : &lt;code&gt;yum install python3 pip3&lt;/code&gt;
* On Windows : install the last 3.X version on : https://www.python.org/downloads/&lt;/p&gt;
&lt;p&gt;In the installation, be carrefull to select the option &lt;code&gt;Add Python to environnment variables&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python_Install" src="https://i.imgur.com/TMMV3nE.png"&gt;&lt;/p&gt;
&lt;p&gt;After install Python3 and pip3, please install theses librairies : &lt;code&gt;boto3&lt;/code&gt;, &lt;code&gt;paramiko&lt;/code&gt; and &lt;code&gt;requests&lt;/code&gt;. (&lt;code&gt;pip3 install boto3 paramiko requests&lt;/code&gt; on your command line)&lt;/p&gt;
&lt;h2&gt;AWS Preparation&lt;/h2&gt;
&lt;p&gt;To use this script, you need (obviously) an Amazon AWS account.&lt;/p&gt;
&lt;p&gt;Then, you have to create a key pair. Keep it name in mind. You'll need it in to run the program. (How to create a key pair on EC2 : (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html) &lt;/p&gt;
&lt;p&gt;After that, you'll need to create a User and get AWS Access ID and Secret Key.
To do that :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Launch the Identity and Access Management console (IAM) in AWS. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click Users on the navigation menu on the left of the screen. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In the popup window, click on Add User. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="ipswitch.com" src="https://blog.ipswitch.com/hs-fs/hubfs/prateek-add-user-aws-iam.png?t=1543273056029&amp;amp;width=847&amp;amp;name=prateek-add-user-aws-iam.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In the new window, provide a user name and choose the 'Programmatic Access' access type, then click next. &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="ipswitch.com" src="https://blog.ipswitch.com/hs-fs/hubfs/prateek-add-user-aws-iam-2.png?t=1543273056029&amp;amp;width=831&amp;amp;name=prateek-add-user-aws-iam-2.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;To set the permissions, choose 'Attach Existing Policies Directly' and in the Policy Filter type 'AmazonEC2FullAccess', you can choose any permission level, but in this example I'll click on the checkbox next to 'AmazonEC2FullAccess'. Then repeat this step with 'AmazonSNSFullAccess' and then click the 'next' button. &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="ipswitch.com" src="https://blog.ipswitch.com/hs-fs/hubfs/prateek-add-user-aws-iam-3.png?t=1543273056029&amp;amp;width=972&amp;amp;name=prateek-add-user-aws-iam-3.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Finally, review the user and permission levels, and click on the 'Create User' button. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The next page will show your keys, as shown below. These are only available once, so it its a good idea to download and save then safely in a secure location. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="ipswitch.com" src="https://blog.ipswitch.com/hs-fs/hubfs/prateek-add-user-aws-iam-4.png?t=1543273056029&amp;amp;width=985&amp;amp;name=prateek-add-user-aws-iam-4.png"&gt;&lt;/p&gt;
&lt;p&gt;(credits to https://blog.ipswitch.com/how-to-create-an-ec2-instance-with-python for this tutorial and pictures)&lt;/p&gt;
&lt;h2&gt;Run the script&lt;/h2&gt;
&lt;p&gt;When that was done, you have to edit the script &lt;code&gt;variables.py&lt;/code&gt; with your own informations.&lt;/p&gt;
&lt;p&gt;Finally you can run the script by using : &lt;code&gt;python3 program.py&lt;/code&gt; or &lt;code&gt;python program.py&lt;/code&gt; in Windows.&lt;/p&gt;
&lt;h2&gt;Informations&lt;/h2&gt;
&lt;p&gt;This script will create Amazon EC2 instance(s). Be carrefull, it can cost you money !&lt;/p&gt;
&lt;h2&gt;Contributing&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Fork it&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create your feature branch (&lt;code&gt;git checkout -b my-new-feature&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Commit your changes (&lt;code&gt;git commit -am 'Add some feature'&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Push to the branch (&lt;code&gt;git push origin my-new-feature&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create new Pull Request&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="DevOps"></category><category term="python"></category><category term="wordpress"></category><category term="aws"></category><category term="ec2"></category><category term="script"></category><category term="debian"></category><category term="amazon"></category></entry><entry><title>Script to install and update Nagios</title><link href="https://thoomson.github.io/script-to-install-and-update-nagios.html" rel="alternate"></link><published>2018-11-30T20:00:00+01:00</published><updated>2018-11-30T21:30:00+01:00</updated><author><name>thoomson</name></author><id>tag:thoomson.github.io,2018-11-30:/script-to-install-and-update-nagios.html</id><summary type="html">&lt;p&gt;My Python script to install or update Nagios on Debian 9&lt;/p&gt;</summary><content type="html">&lt;p&gt;Files and last updates : https://github.com/thoomson/InstallUpdateNagios&lt;/p&gt;
&lt;p&gt;Python script to install Nagios on Debian 9&lt;/p&gt;
&lt;h2&gt;Prepare your setup&lt;/h2&gt;
&lt;p&gt;To use this script you need to install Python3 and pip3.
* On debian/ubuntu : &lt;code&gt;apt install python3&lt;/code&gt;
* On centos : &lt;code&gt;yum install python3&lt;/code&gt;
* On Windows : install the last 3.X version on : https://www.python.org/downloads/&lt;/p&gt;
&lt;p&gt;In the installation, be carrefull to select the option &lt;code&gt;Add Python to environnment variables&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Python_Install" src="https://i.imgur.com/TMMV3nE.png"&gt;&lt;/p&gt;
&lt;p&gt;When that was done, you have to edit the script &lt;code&gt;variables.py&lt;/code&gt; with your own informations.&lt;/p&gt;
&lt;h2&gt;Run the script&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;python3 install.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python3 update.py&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;Contributing&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Fork it&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create your feature branch (&lt;code&gt;git checkout -b my-new-feature&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Commit your changes (&lt;code&gt;git commit -am 'Add some feature'&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Push to the branch (&lt;code&gt;git push origin my-new-feature&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create new Pull Request&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="DevOps"></category><category term="python"></category><category term="script"></category><category term="monitoring"></category><category term="nagios"></category><category term="debian"></category></entry></feed>